geom_point(shape=21) +
geom_smooth(method = "lm", se = FALSE) +
geom_errorbarh(aes(xmin=YMin.Verid,xmax=YMax.Verid),alpha=.8,color="gray") +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),alpha=.8,color="gray") +
#geom_abline(intercept=0,slope=1, color="gray", linetype="dashed") +
xlab("Mean veridicality rating") +
ylab("Mean projection rating") +
scale_y_continuous(limits = c(-1,1)) +
scale_x_continuous(limits = c(-1,1)) +
coord_fixed(ratio = 1) +
theme(legend.position = "none", axis.title.x = element_text(color="black", size=14), axis.title.y = element_text(color="black", size=14))
ggplot(mean.proj.verid, aes(x = Mean.Verid, y = Mean.Proj, color = predicateType)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Mean veridicality rating", y = "Mean projection rating",
color = "Predicate type") +
theme(legend.position = "top") +
coord_fixed(ratio = 1)
# Mean projection by mean veridicality
ggplot(mean.proj.verid, aes(x=Mean.Verid,y=Mean.Proj, group = predicateType)) +
geom_point(shape=21) +
geom_smooth(method = "lm", se = FALSE) +
geom_errorbarh(aes(xmin=YMin.Verid,xmax=YMax.Verid),alpha=.8,color="gray") +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),alpha=.8,color="gray") +
#geom_abline(intercept=0,slope=1, color="gray", linetype="dashed") +
xlab("Mean veridicality rating") +
ylab("Mean projection rating") +
scale_y_continuous(limits = c(-1,1)) +
scale_x_continuous(limits = c(-1,1)) +
coord_fixed(ratio = 1) +
theme(legend.position = "none", axis.title.x = element_text(color="black", size=14), axis.title.y = element_text(color="black", size=14))
ggplot(mean.proj.verid, aes(x = Mean.Verid, y = Mean.Proj, color = predicateType)) +
geom_point(alpha = .3) +
geom_label_repel(data=subset(mean.proj.verid, Mean.Verid > 0 & Mean.Proj < 0),
aes(x = Mean.Verid, y = Mean.Proj, label=verb_renamed)) +
geom_smooth(method = "lm", color = "black", linewidth = 0.5) +
labs(
x = "Mean veridicality rating", y = "Mean projection rating",
color = "Predicate type") +
theme(panel.grid = element_blank(),
legend.position = "none") +
geom_abline(intercept=0,slope=0, color="gray", linetype="dashed") +
#geom_abline(intercept=0,slope=0, color="gray", linetype="dashed") +
geom_vline(xintercept=0, color="gray", linetype="dashed") +
scale_y_continuous(limits = c(-1,1)) +
scale_x_continuous(limits = c(-1,1)) +
coord_fixed(ratio = 1) +
facet_wrap(~predicateType)
nrow(d.proj) #16291
# create predicateType column
d.proj = d.proj %>%
mutate(predicateType = case_when(communicative == "yes" & private == "yes" ~ "comPriv",
communicative == "yes" ~ "communicative",
emotive == "yes" ~ "emotive",
cognitive == "yes" ~ "cognitive",
evidential == "yes" ~ "evidential",
TRUE ~ "other"))
table(d.proj$predicateType)
# how many predicates in which type and which voice?
d.proj %>%
select(predicateType, verb, voice) %>%
unique() %>%
group_by(predicateType,voice) %>%
summarize(count=n())
# color code the predicates
cols = d.proj %>%
select(c(verb_renamed,predicateType)) %>%
distinct(verb_renamed,predicateType)
cols
nrow(cols) #544
# color-code the predicates
cols$Colors =  ifelse(cols$predicateType == "comPriv", "pink",
ifelse(cols$predicateType == "emotive", "#D55E00",
ifelse(cols$predicateType == "cognitive", "#5b43c4",
ifelse(cols$predicateType == "communicative", "gray",
ifelse(cols$predicateType == "inferential", "green", "black")))))
cols
## by-predicateType ----
# calculate by-predicateType means
mean.proj = d.proj %>%
#filter(voice == "active") %>%
group_by(predicateType, voice) %>%
summarize(Mean.Proj = mean(veridicality_num), CILow = ci.low(veridicality_num), CIHigh = ci.high(veridicality_num)) %>%
mutate(YMin.Proj = Mean.Proj - CILow, YMax.Proj = Mean.Proj + CIHigh, predicateType = fct_reorder(as.factor(predicateType),Mean.Proj))
mean.proj
nrow(mean.proj) #10
levels(mean.proj$predicateType)
ggplot(mean.proj, aes(x=predicateType, y=Mean.Proj, color = voice)) +
geom_point() +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),width=0) +
geom_hline(yintercept=0) +
theme(legend.position="top",
axis.ticks.x=element_blank(),
axis.text.x = element_text(size=10,angle = 75, hjust = 1)) +
scale_y_continuous(limits = c(-1,1),breaks = c(-1,0,1)) +
ylab("Mean projection rating") +
xlab("Predicate")
## by-predicate ----
# calculate by-predicate projection means
mean.proj = d.proj %>%
group_by(verb_renamed) %>%
summarize(Mean.Proj = mean(veridicality_num), CILow = ci.low(veridicality_num), CIHigh = ci.high(veridicality_num)) %>%
mutate(YMin.Proj = Mean.Proj - CILow, YMax.Proj = Mean.Proj + CIHigh, verb_renamed = fct_reorder(as.factor(verb_renamed),Mean.Proj))
nrow(mean.proj) #544
levels(mean.proj$verb_renamed)
# add predicateType, verb and voice to the means
tmp = d.proj %>%
#filter(voice == "active") %>%
select(c(verb,verb_renamed,voice,predicateType)) %>%
distinct(verb,verb_renamed,voice,predicateType)
nrow(tmp) #544
mean.proj = left_join(mean.proj, tmp, by = c("verb_renamed")) %>%
distinct() %>%
mutate(verb_renamed = fct_reorder(as.factor(verb_renamed),Mean.Proj))
nrow(mean.proj) #544
cols$verb_renamed = factor(cols$verb_renamed, levels = mean.proj$verb_renamed[order(mean.proj$Mean.Proj)], ordered = TRUE)
# remove "other" and "comPriv" predicates
mean.proj = mean.proj %>%
filter(predicateType != "other" & predicateType != "comPriv")
nrow(mean.proj) #525
ggplot(mean.proj, aes(x=verb_renamed, y=Mean.Proj, fill = predicateType, color = predicateType)) +
geom_point() +
#geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),width=0) +
geom_hline(yintercept=0) +
theme(legend.position="top",
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank()) +
#theme(axis.text.x = element_text(color=cols$Colors,size=10,angle = 75, hjust = 1)) +
scale_y_continuous(limits = c(-1,1),breaks = c(-1,0,1)) +
ylab("Mean projection rating") +
xlab("Predicate")
ggplot(mean.proj, aes(x=verb_renamed, y=Mean.Proj, fill = predicateType, color = predicateType)) +
geom_point() +
#geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),width=0) +
geom_hline(yintercept=0) +
theme(legend.position="top",
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank()) +
#theme(axis.text.x = element_text(color=cols$Colors,size=10,angle = 75, hjust = 1)) +
scale_y_continuous(limits = c(-1,1),breaks = c(-1,0,1)) +
facet_grid(. ~ predicateType) +
ylab("Mean projection rating") +
xlab("Predicate")
## only "emotive" predicates ----
mean.proj = mean.proj %>%
filter(predicateType == "emotive")
nrow(mean.proj) #150
ggplot(mean.proj, aes(x = verb_renamed, y = Mean.Proj, colour = voice)) +
geom_point() +
geom_hline(yintercept = 0) +
scale_colour_discrete(name = element_blank(),
labels = c("verbal predicate", "adjectival predicate")) +
theme(legend.position = "top",
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank()) +
scale_y_continuous(limits = c(-1,1), breaks = c(-1,0,1)) +
ylab("Mean projection rating") +
xlab("Emotive predicate")
# only emotives which occur in both "active" and "passive" sentence frames
mean.proj = mean.proj %>%
group_by(verb) %>%
filter(n()>1) %>%
ungroup()
nrow(mean.proj) #12
ggplot(mean.proj, aes(x = verb, y = Mean.Proj, colour = voice)) +
geom_point() +
geom_errorbar(aes(ymin = YMin.Proj,ymax = YMax.Proj), width = 0) +
geom_hline(yintercept = 0) +
theme(legend.position = "top",
axis.text.x = element_text(vjust = 1, hjust = 0.5),
panel.grid.major.x = element_blank()) +
scale_colour_discrete(name = element_blank(),
labels = c("verbal predicate", "adjectival predicate")) +
scale_x_discrete(labels = function(x) sub("_", " ", x)) +
scale_y_continuous(limits = c(-1,1), breaks = c(-1,0,1)) +
ylab("Mean projection rating") +
xlab("Emotive predicate")
# create dataset for projection inferences
d.proj = droplevels(subset(d,d$polarity == "negative" | d$conditional2 == "conditional"))
nrow(d.proj) #16291
# create predicateType and Dynamicity columns
d.proj = d.proj %>%
mutate(predicateType = case_when(communicative == "yes" & private == "yes" ~ "comPriv",
communicative == "yes" ~ "communicative",
emotive == "yes" ~ "emotive",
cognitive == "yes" ~ "cognitive",
evidential == "yes" ~ "evidential",
TRUE ~ "other"),
Dynamicity = case_when(stative_predicate == "yes" ~ "stative",
dynamic_predicate == "yes" ~ "dynamic",
TRUE ~ "other"))
# how many predicates in which predicateType and with which Dynamicity?
d.proj %>%
select(predicateType, verb, Dynamicity) %>%
unique() %>%
group_by(predicateType, Dynamicity) %>%
summarize(count=n())
mean.proj = d.proj %>%
group_by(predicateType, Dynamicity) %>%
summarize(Mean.Proj = mean(veridicality_num), CILow = ci.low(veridicality_num), CIHigh = ci.high(veridicality_num)) %>%
mutate(YMin.Proj = Mean.Proj - CILow, YMax.Proj = Mean.Proj + CIHigh, predicateType = fct_reorder(as.factor(predicateType),Mean.Proj))
nrow(mean.proj) #11
ggplot(mean.proj, aes(x=predicateType, y=Mean.Proj, color = Dynamicity)) +
geom_point() +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),width=0) +
geom_hline(yintercept=0) +
theme(legend.position="top",
axis.ticks.x=element_blank(),
axis.text.x = element_text(size=10,angle = 75, hjust = 1)) +
scale_y_continuous(limits = c(-1,1),breaks = c(-1,0,1)) +
ylab("Mean projection rating") +
xlab("Predicate")
# create datasets for projection and veridicality inferences
d.proj = droplevels(subset(d,d$polarity == "negative" | d$conditional2 == "conditional"))
nrow(d.proj) #16291
d.verid = droplevels(subset(d,d$polarity != "negative" & d$conditional2 != "conditional"))
nrow(d.verid) #5401
# create predicateType column
d.proj = d.proj %>%
mutate(predicateType = case_when(communicative == "yes" & private == "yes" ~ "comPriv",
communicative == "yes" ~ "communicative",
emotive == "yes" ~ "emotive",
cognitive == "yes" ~ "cognitive",
evidential == "yes" ~ "evidential",
TRUE ~ "other"))
# color code the predicates
cols = d.proj %>%
select(c(verb_renamed,predicateType)) %>%
distinct(verb_renamed,predicateType)
cols
nrow(cols) #544
# color-code the predicates
cols$Colors =  ifelse(cols$predicateType == "comPriv", "pink",
ifelse(cols$predicateType == "emotive", "#D55E00",
ifelse(cols$predicateType == "cognitive", "#5b43c4",
ifelse(cols$predicateType == "communicative", "gray",
ifelse(cols$predicateType == "inferential", "green", "black")))))
cols
# calculate by-predicate projection means
mean.proj = d.proj %>%
group_by(verb_renamed) %>%
summarize(Mean.Proj = mean(veridicality_num), CILow = ci.low(veridicality_num), CIHigh = ci.high(veridicality_num)) %>%
mutate(YMin.Proj = Mean.Proj - CILow, YMax.Proj = Mean.Proj + CIHigh, verb_renamed = fct_reorder(as.factor(verb_renamed),Mean.Proj))
mean.proj
nrow(mean.proj) #544
levels(mean.proj$verb_renamed)
# add predicateType, verb and voice to the means
tmp = d.proj %>%
#filter(voice == "active") %>%
select(c(verb,verb_renamed,voice,predicateType)) %>%
distinct(verb,verb_renamed,voice,predicateType)
nrow(tmp) #544
mean.proj = left_join(mean.proj, tmp, by = c("verb_renamed")) %>%
distinct() %>%
mutate(verb_renamed = fct_reorder(as.factor(verb_renamed),Mean.Proj))
nrow(mean.proj) #544
cols$verb_renamed = factor(cols$verb_renamed, levels = mean.proj$verb_renamed[order(mean.proj$Mean.Proj)], ordered = TRUE)
# calculate by-predicate veridicality means
mean.verid = d.verid %>%
group_by(verb_renamed) %>%
summarize(Mean.Verid = mean(veridicality_num), CILow = ci.low(veridicality_num), CIHigh = ci.high(veridicality_num)) %>%
mutate(YMin.Verid = Mean.Verid - CILow, YMax.Verid = Mean.Verid + CIHigh, verb_renamed = fct_reorder(as.factor(verb_renamed),Mean.Verid))
mean.verid
nrow(mean.verid) #544
levels(mean.verid$verb_renamed)
mean.proj.verid = mean.proj %>%
inner_join(mean.verid,by=("verb_renamed"))
mean.proj.verid
# remove "other" and "comPriv" predicates
mean.proj.verid = mean.proj.verid %>%
filter(predicateType != "other" & predicateType != "comPriv")
nrow(mean.proj.verid) #524
# Mean projection by mean veridicality
ggplot(mean.proj.verid, aes(x=Mean.Verid,y=Mean.Proj, group = predicateType)) +
geom_point(shape=21) +
geom_smooth(method = "lm", se = FALSE) +
geom_errorbarh(aes(xmin=YMin.Verid,xmax=YMax.Verid),alpha=.8,color="gray") +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),alpha=.8,color="gray") +
#geom_abline(intercept=0,slope=1, color="gray", linetype="dashed") +
xlab("Mean veridicality rating") +
ylab("Mean projection rating") +
scale_y_continuous(limits = c(-1,1)) +
scale_x_continuous(limits = c(-1,1)) +
coord_fixed(ratio = 1) +
theme(legend.position = "none", axis.title.x = element_text(color="black", size=14), axis.title.y = element_text(color="black", size=14))
ggplot(mean.proj.verid, aes(x = Mean.Verid, y = Mean.Proj, color = predicateType)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Mean veridicality rating", y = "Mean projection rating",
color = "Predicate type") +
theme(legend.position = "top") +
coord_fixed(ratio = 1)
# What are the predicates with negative mean projection rating and positive mean veridicality rating?
ggplot(mean.proj.verid, aes(x = Mean.Verid, y = Mean.Proj, color = predicateType)) +
geom_point(alpha = .3) +
geom_label_repel(data=subset(mean.proj.verid, Mean.Verid > 0 & Mean.Proj < 0),
aes(x = Mean.Verid, y = Mean.Proj, label=verb_renamed)) +
geom_smooth(method = "lm", color = "black", linewidth = 0.5) +
labs(
x = "Mean veridicality rating", y = "Mean projection rating",
color = "Predicate type") +
theme(panel.grid = element_blank(),
legend.position = "none") +
geom_abline(intercept=0,slope=0, color="gray", linetype="dashed") +
#geom_abline(intercept=0,slope=0, color="gray", linetype="dashed") +
geom_vline(xintercept=0, color="gray", linetype="dashed") +
scale_y_continuous(limits = c(-1,1)) +
scale_x_continuous(limits = c(-1,1)) +
coord_fixed(ratio = 1) +
facet_wrap(~predicateType)
# create dataset for projection inferences
d.proj = droplevels(subset(d,d$polarity == "negative" | d$conditional2 == "conditional"))
nrow(d.proj) #16291
# create predicateType and Dynamicity columns
d.proj = d.proj %>%
mutate(predicateType = case_when(communicative == "yes" & private == "yes" ~ "comPriv",
communicative == "yes" ~ "communicative",
emotive == "yes" ~ "emotive",
cognitive == "yes" ~ "cognitive",
evidential == "yes" ~ "evidential",
TRUE ~ "other"),
Dynamicity = case_when(stative_predicate == "yes" ~ "stative",
dynamic_predicate == "yes" ~ "dynamic",
TRUE ~ "other"))
# how many predicates in which predicateType and with which Dynamicity?
d.proj %>%
select(predicateType, verb, Dynamicity) %>%
unique() %>%
group_by(predicateType, Dynamicity) %>%
summarize(count=n())
mean.proj = d.proj %>%
group_by(predicateType, Dynamicity) %>%
summarize(Mean.Proj = mean(veridicality_num), CILow = ci.low(veridicality_num), CIHigh = ci.high(veridicality_num)) %>%
mutate(YMin.Proj = Mean.Proj - CILow, YMax.Proj = Mean.Proj + CIHigh, predicateType = fct_reorder(as.factor(predicateType),Mean.Proj))
nrow(mean.proj) #11
ggplot(mean.proj, aes(x=predicateType, y=Mean.Proj, color = Dynamicity)) +
geom_point() +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),width=0) +
geom_hline(yintercept=0) +
theme(legend.position="top",
axis.ticks.x=element_blank(),
axis.text.x = element_text(size=10,angle = 75, hjust = 1)) +
scale_y_continuous(limits = c(-1,1),breaks = c(-1,0,1)) +
ylab("Mean projection rating") +
xlab("Predicate")
# create dataset for projection inferences
d.proj = droplevels(subset(d,d$polarity == "negative" | d$conditional2 == "conditional"))
nrow(d.proj) #16291
# create predicateType and Dynamicity columns
d.proj = d.proj %>%
mutate(predicateType = case_when(communicative == "yes" & private == "yes" ~ "comPriv",
communicative == "yes" ~ "communicative",
emotive == "yes" ~ "emotive",
cognitive == "yes" ~ "cognitive",
evidential == "yes" ~ "evidential",
TRUE ~ "other"),
Dynamicity = case_when(stative_predicate == "yes" ~ "stative",
dynamic_predicate == "yes" ~ "dynamic",
TRUE ~ "unclear"))
# how many predicates in which predicateType and with which Dynamicity?
d.proj %>%
select(predicateType, verb, Dynamicity) %>%
unique() %>%
group_by(predicateType, Dynamicity) %>%
summarize(count=n())
mean.proj = d.proj %>%
group_by(predicateType, Dynamicity) %>%
summarize(Mean.Proj = mean(veridicality_num), CILow = ci.low(veridicality_num), CIHigh = ci.high(veridicality_num)) %>%
mutate(YMin.Proj = Mean.Proj - CILow, YMax.Proj = Mean.Proj + CIHigh, predicateType = fct_reorder(as.factor(predicateType),Mean.Proj))
nrow(mean.proj) #11
ggplot(mean.proj, aes(x=predicateType, y=Mean.Proj, color = Dynamicity)) +
geom_point() +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),width=0) +
geom_hline(yintercept=0) +
theme(legend.position="top",
axis.ticks.x=element_blank(),
axis.text.x = element_text(size=10,angle = 75, hjust = 1)) +
scale_y_continuous(limits = c(-1,1),breaks = c(-1,0,1)) +
ylab("Mean projection rating") +
xlab("Predicate")
ggplot(mean.proj, aes(x=predicateType, y=Mean.Proj, color = Dynamicity)) +
geom_point() +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),width=0) +
geom_hline(yintercept=0) +
theme(legend.position="top",
axis.ticks.x=element_blank(),
axis.text.x = element_text(size=10,angle = 75, hjust = 1)) +
scale_y_continuous(limits = c(-1,1),breaks = c(-1,0,1)) +
ylab("Mean projection rating") +
xlab("Predicate Type")
ggplot(mean.proj, aes(x=predicateType, y=Mean.Proj, color = Dynamicity)) +
geom_point() +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),width=0) +
geom_hline(yintercept=0) +
theme(legend.position="top",
axis.ticks.x=element_blank(),
axis.text.x = element_text(size=10,angle = 75, hjust = 1)) +
scale_y_continuous(limits = c(-1,1),breaks = c(-1,0,1)) +
ylab("Mean projection rating") +
xlab("Predicate type")
ggplot(mean.proj, aes(x=predicateType, y=Mean.Proj, color = Dynamicity)) +
geom_point() +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),width=0) +
geom_hline(yintercept=0) +
theme(legend.position="top",
axis.ticks.x=element_blank(),
axis.text.x = element_text(size=10,angle = 75, hjust = 1)) +
scale_y_continuous(limits = c(-1,1),breaks = c(-1,0,1)) +
ylab("Mean projection rating") +
xlab("Predicate type")
ggsave("../graphs/projection-by-predicateType-and-Dynamicity.pdf",height=4,width=5)
# create datasets for projection and veridicality inferences
d.proj = droplevels(subset(d,d$polarity == "negative" | d$conditional2 == "conditional"))
nrow(d.proj) #16291
d.verid = droplevels(subset(d,d$polarity != "negative" & d$conditional2 != "conditional"))
nrow(d.verid) #5401
# create predicateType column
d.proj = d.proj %>%
mutate(predicateType = case_when(communicative == "yes" & private == "yes" ~ "comPriv",
communicative == "yes" ~ "communicative",
emotive == "yes" ~ "emotive",
cognitive == "yes" ~ "cognitive",
evidential == "yes" ~ "evidential",
TRUE ~ "other"))
# color code the predicates
cols = d.proj %>%
select(c(verb_renamed,predicateType)) %>%
distinct(verb_renamed,predicateType)
nrow(cols) #544
# color-code the predicates
cols$Colors =  ifelse(cols$predicateType == "comPriv", "pink",
ifelse(cols$predicateType == "emotive", "#D55E00",
ifelse(cols$predicateType == "cognitive", "#5b43c4",
ifelse(cols$predicateType == "communicative", "gray",
ifelse(cols$predicateType == "inferential", "green", "black")))))
# calculate by-predicate projection means
mean.proj = d.proj %>%
group_by(verb_renamed) %>%
summarize(Mean.Proj = mean(veridicality_num), CILow = ci.low(veridicality_num), CIHigh = ci.high(veridicality_num)) %>%
mutate(YMin.Proj = Mean.Proj - CILow, YMax.Proj = Mean.Proj + CIHigh, verb_renamed = fct_reorder(as.factor(verb_renamed),Mean.Proj))
nrow(mean.proj) #544
# add predicateType, verb and voice to the means
tmp = d.proj %>%
#filter(voice == "active") %>%
select(c(verb,verb_renamed,voice,predicateType)) %>%
distinct(verb,verb_renamed,voice,predicateType)
nrow(tmp) #544
mean.proj = left_join(mean.proj, tmp, by = c("verb_renamed")) %>%
distinct() %>%
mutate(verb_renamed = fct_reorder(as.factor(verb_renamed),Mean.Proj))
nrow(mean.proj) #544
cols$verb_renamed = factor(cols$verb_renamed, levels = mean.proj$verb_renamed[order(mean.proj$Mean.Proj)], ordered = TRUE)
# calculate by-predicate veridicality means
mean.verid = d.verid %>%
group_by(verb_renamed) %>%
summarize(Mean.Verid = mean(veridicality_num), CILow = ci.low(veridicality_num), CIHigh = ci.high(veridicality_num)) %>%
mutate(YMin.Verid = Mean.Verid - CILow, YMax.Verid = Mean.Verid + CIHigh, verb_renamed = fct_reorder(as.factor(verb_renamed),Mean.Verid))
nrow(mean.verid) #544
mean.proj.verid = mean.proj %>%
inner_join(mean.verid,by=("verb_renamed"))
# remove "other" and "comPriv" predicates
mean.proj.verid = mean.proj.verid %>%
filter(predicateType != "other" & predicateType != "comPriv")
nrow(mean.proj.verid) #524
# Mean projection by mean veridicality
ggplot(mean.proj.verid, aes(x=Mean.Verid,y=Mean.Proj, group = predicateType)) +
geom_point(shape=21) +
geom_smooth(method = "lm", se = FALSE) +
geom_errorbarh(aes(xmin=YMin.Verid,xmax=YMax.Verid),alpha=.8,color="gray") +
geom_errorbar(aes(ymin=YMin.Proj,ymax=YMax.Proj),alpha=.8,color="gray") +
#geom_abline(intercept=0,slope=1, color="gray", linetype="dashed") +
xlab("Mean veridicality rating") +
ylab("Mean projection rating") +
scale_y_continuous(limits = c(-1,1)) +
scale_x_continuous(limits = c(-1,1)) +
coord_fixed(ratio = 1) +
theme(legend.position = "none", axis.title.x = element_text(color="black", size=14), axis.title.y = element_text(color="black", size=14))
ggsave("../graphs/projection-by-veridicality-with-CIs.pdf", height = 4,width = 5)
ggplot(mean.proj.verid, aes(x = Mean.Verid, y = Mean.Proj, color = predicateType)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Mean veridicality rating", y = "Mean projection rating",
color = "Predicate type") +
theme(legend.position = "top") +
coord_fixed(ratio = 1)
ggsave("../graphs/projection-by-veridicality.pdf", height = 4,width = 5)
ggsave("../graphs/projection-by-veridicality.pdf", height = 4,width = 8)
# What are the predicates with negative mean projection rating and positive mean veridicality rating?
ggplot(mean.proj.verid, aes(x = Mean.Verid, y = Mean.Proj, color = predicateType)) +
geom_point(alpha = .3) +
geom_label_repel(data=subset(mean.proj.verid, Mean.Verid > 0 & Mean.Proj < 0),
aes(x = Mean.Verid, y = Mean.Proj, label=verb_renamed)) +
geom_smooth(method = "lm", color = "black", linewidth = 0.5) +
labs(
x = "Mean veridicality rating", y = "Mean projection rating",
color = "Predicate type") +
theme(panel.grid = element_blank(),
legend.position = "none") +
geom_abline(intercept=0,slope=0, color="gray", linetype="dashed") +
#geom_abline(intercept=0,slope=0, color="gray", linetype="dashed") +
geom_vline(xintercept=0, color="gray", linetype="dashed") +
scale_y_continuous(limits = c(-1,1)) +
scale_x_continuous(limits = c(-1,1)) +
coord_fixed(ratio = 1) +
facet_wrap(~predicateType)
ggsave("../graphs/projection-by-veridicality2.pdf", height = 4,width = 6)
